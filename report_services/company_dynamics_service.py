# report_services/company_dynamics_service.py
import pandas as pd
from datetime import datetime

class CompanyDynamicsService:
    def __init__(self, data_repository):
        self.repo = data_repository
    
    def generate_report(self):
        """–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç –ø–æ –¥–∏–Ω–∞–º–∏–∫–µ –∫–æ–º–ø–∞–Ω–∏–∏"""
        dynamics_data = self.repo.get_company_dynamics()
        
        if len(dynamics_data) == 0:
            return "‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∏–Ω–∞–º–∏–∫–∏", None
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        report_text = self._format_report_text(dynamics_data)
        plot_data = self._prepare_plot_data(dynamics_data)
        
        return report_text, plot_data
    
    def _format_report_text(self, data):
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞"""
        text = "üìà –î–ò–ù–ê–ú–ò–ö–ê –ö–û–ú–ü–ê–ù–ò–ò\n\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –º–µ—Å—è—Ü–∞–º
        text += "üìä –î–ï–¢–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –ú–ï–°–Ø–¶–ê–ú:\n"
        month_names = {'2025-07': '–ò—é–ª—å', '2025-08': '–ê–≤–≥—É—Å—Ç', '2025-09': '–°–µ–Ω—Ç—è–±—Ä—å'}
        
        for _, row in data.iterrows():
            month_name = month_names.get(row['month'], row['month'])
            net_growth = row['hires'] - row['fires']
            trend = "‚ñ≤" if net_growth > 0 else "‚ñº"
            
            text += f"‚Ä¢ {month_name}:\n"
            text += f"  –°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {int(row['total_employees']):,} —á–µ–ª.\n"
            text += f"  –ù–∞–π–º—ã: {int(row['hires'])} —á–µ–ª.\n"
            text += f"  –£–≤–æ–ª—å–Ω–µ–Ω–∏—è: {int(row['fires'])} —á–µ–ª.\n"
            text += f"  –ß–∏—Å—Ç—ã–π –ø—Ä–∏—Ä–æ—Å—Ç: {trend} {abs(int(net_growth))} —á–µ–ª.\n\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ –ø—Ä–æ —Å–µ–Ω—Ç—è–±—Ä—å
        text += "üìù –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –î–∞–Ω–Ω—ã–µ –∑–∞ —Å–µ–Ω—Ç—è–±—Ä—å –∞–∫—Ç—É–∞–ª—å–Ω—ã –Ω–∞ 3-–µ —á–∏—Å–ª–æ –º–µ—Å—è—Ü–∞, \n"
        text += "–≤ —Ç–æ –≤—Ä–µ–º—è –∫–∞–∫ –¥–∞–Ω–Ω—ã–µ –∑–∞ –∏—é–ª—å –∏ –∞–≤–≥—É—Å—Ç - –Ω–∞ –∫–æ–Ω–µ—Ü –º–µ—Å—è—Ü–∞. \n"
        text += "–≠—Ç–æ –æ–±—ä—è—Å–Ω—è–µ—Ç —Ä–∞–∑–Ω–∏—Ü—É –≤ –∞–±—Å–æ–ª—é—Ç–Ω—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è—Ö.\n\n"
        
        # –ò—Ç–æ–≥–∏ –∑–∞ –ø–µ—Ä–∏–æ–¥
        total_hires = data['hires'].sum()
        total_fires = data['fires'].sum()
        total_growth = total_hires - total_fires
        avg_employees = data['total_employees'].mean()
        
        text += f"üìã –ò–¢–û–ì–ò –ó–ê –ü–ï–†–ò–û–î:\n"
        text += f"‚Ä¢ –°—Ä–µ–¥–Ω—è—è —á–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç—å: {avg_employees:,.0f} —á–µ–ª.\n"
        text += f"‚Ä¢ –í—Å–µ–≥–æ –Ω–∞–π–º–æ–≤: {int(total_hires):,} —á–µ–ª.\n"
        text += f"‚Ä¢ –í—Å–µ–≥–æ —É–≤–æ–ª—å–Ω–µ–Ω–∏–π: {int(total_fires):,} —á–µ–ª.\n"
        text += f"‚Ä¢ –ß–∏—Å—Ç—ã–π –ø—Ä–∏—Ä–æ—Å—Ç: {total_growth:+,.0f} —á–µ–ª.\n"
        text += f"‚Ä¢ –û–±—â–∞—è —Ç–µ–∫—É—á–µ—Å—Ç—å: {(total_fires/avg_employees)*100:.1f}%\n\n"
        
        # –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤
        if total_growth > 0:
            growth_percentage = (total_growth / avg_employees) * 100
            text += f"‚Ä¢ üìà –ö–û–ú–ü–ê–ù–ò–Ø –†–ê–°–¢–ï–¢ (+{growth_percentage:.1f}% –∑–∞ –ø–µ—Ä–∏–æ–¥)\n"
        else:
            text += f"‚Ä¢ üìâ –°–û–ö–†–ê–©–ï–ù–ò–ï –ß–ò–°–õ–ï–ù–ù–û–°–¢–ò\n"
        
        # –ê–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç—Ä–µ–Ω–¥–æ–≤
        if len(data) >= 2:
            last_growth = data['hires'].iloc[-1] - data['fires'].iloc[-1]
            prev_growth = data['hires'].iloc[-2] - data['fires'].iloc[-2]
            
            text += f"\nüìà –ê–ù–ê–õ–ò–ó –¢–†–ï–ù–î–û–í:\n"
            if last_growth > prev_growth:
                text += "‚Ä¢ –£—Å–∫–æ—Ä—è–µ—Ç—Å—è —Ä–æ—Å—Ç —á–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç–∏\n"
            elif last_growth < prev_growth:
                text += "‚Ä¢ –ó–∞–º–µ–¥–ª—è–µ—Ç—Å—è —Ä–æ—Å—Ç/—É—Å–∫–æ—Ä—è–µ—Ç—Å—è —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ\n"
            else:
                text += "‚Ä¢ ‚ÜîÔ∏è  –°—Ç–∞–±–∏–ª—å–Ω–∞—è –¥–∏–Ω–∞–º–∏–∫–∞\n"
        
        return text
    
    def _prepare_plot_data(self, data):
        """–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞"""
        if len(data) == 0:
            return None
            
        # –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞
        plot_data = pd.DataFrame()
        
        for _, row in data.iterrows():
            hires_row = {'month': row['month'], 'value': row['hires'], 'type': '–ù–∞–π–º—ã'}
            fires_row = {'month': row['month'], 'value': row['fires'], 'type': '–£–≤–æ–ª—å–Ω–µ–Ω–∏—è'}
            plot_data = pd.concat([plot_data, pd.DataFrame([hires_row, fires_row])], ignore_index=True)
        
        return plot_data