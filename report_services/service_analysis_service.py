# report_services/service_analysis_service.py
import pandas as pd

class ServiceAnalysisService:
    def __init__(self, data_repository):
        self.repo = data_repository
    
    def generate_report(self, report_date):
        """–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∞–ª–∏–∑ –ø–æ —Å–µ—Ä–≤–∏—Å–∞–º"""
        data = self.repo.get_service_stats(report_date)
        
        if len(data) == 0:
            return "‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ —Å–µ—Ä–≤–∏—Å–∞–º", None
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
        total_employees = data['employees'].sum()
        data['attrition_rate'] = (data['fires'] / data['employees'].replace(0, 1)) * 100
        data['attrition_rate'] = data['attrition_rate'].fillna(0)
        data['percentage'] = (data['employees'] / total_employees) * 100
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        report_text = self._format_report(data, total_employees, report_date)
        
        return report_text, data
    
    def _format_report(self, data, total_employees, report_date):
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –æ—Ç—á–µ—Ç–∞"""
        text = f"üè¢ –ê–ù–ê–õ–ò–ó –ü–û –°–ï–†–í–ò–°–ê–ú –Ω–∞ {report_date[:10]}\n\n"
        
        text += f"üìä –û–±—â–∞—è —á–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç—å: {total_employees:,} —á–µ–ª.\n\n"
        
        text += "üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø–æ —Å–µ—Ä–≤–∏—Å–∞–º:\n"
        for _, row in data.iterrows():
            text += f"‚Ä¢ {row['service']}: {int(row['employees']):,} —á–µ–ª. ({row['percentage']:.1f}%)\n"
        
        text += "\nüìà –¢–µ–∫—É—á–µ—Å—Ç—å –∫–∞–¥—Ä–æ–≤:\n"
        for _, row in data.iterrows():
            if pd.isna(row['attrition_rate']) or row['attrition_rate'] == 0:
                status = "‚ûñ"
                rate = "0.0%"
            else:
                status = "‚úÖ" if row['attrition_rate'] < 5 else "‚ö†Ô∏è" if row['attrition_rate'] < 10 else "‚ùå"
                rate = f"{row['attrition_rate']:.1f}%"
            text += f"‚Ä¢ {row['service']}: {status} {rate}\n"
        
        # –ê–Ω–∞–ª–∏–∑ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
        text += f"\nüìä –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ü–û –°–ï–†–í–ò–°–ê–ú:\n"
        
        # –¢–æ–ø-5 —Å–µ—Ä–≤–∏—Å–æ–≤ –ø–æ —Ä–∞–∑–º–µ—Ä—É
        top_5 = data.nlargest(5, 'employees')
        text += f"‚Ä¢ –¢–æ–ø-5 —Å–µ—Ä–≤–∏—Å–æ–≤: {', '.join(top_5['service'].tolist())}\n"
        text += f"‚Ä¢ –î–æ–ª—è —Ç–æ–ø-5: {top_5['percentage'].sum():.1f}% –æ—Ç –æ–±—â–µ–π —á–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç–∏\n"
        
        # –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—á–µ—Å—Ç–∏
        best_service = data[data['attrition_rate'] > 0].nsmallest(1, 'attrition_rate')
        worst_service = data.nlargest(1, 'attrition_rate')
        
        if len(best_service) > 0 and best_service['attrition_rate'].iloc[0] > 0:
            text += f"‚Ä¢ üèÜ –õ—É—á—à–∏–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å: {best_service['service'].iloc[0]} ({best_service['attrition_rate'].iloc[0]:.1f}% —Ç–µ–∫—É—á–µ—Å—Ç–∏)\n"
        
        if len(worst_service) > 0 and worst_service['attrition_rate'].iloc[0] > 5:
            text += f"‚Ä¢ ‚ö†Ô∏è  –í—ã—Å–æ–∫–∞—è —Ç–µ–∫—É—á–µ—Å—Ç—å: {worst_service['service'].iloc[0]} ({worst_service['attrition_rate'].iloc[0]:.1f}%)\n"
        
        # –ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞
        largest_service = data.nlargest(1, 'employees')
        if len(largest_service) > 0:
            concentration = largest_service['percentage'].iloc[0]
            text += f"‚Ä¢ üéØ –ö—Ä—É–ø–Ω–µ–π—à–∏–π —Å–µ—Ä–≤–∏—Å: {largest_service['service'].iloc[0]} ({concentration:.1f}% –ø–µ—Ä—Å–æ–Ω–∞–ª–∞)\n"
            
            if concentration > 30:
                text += "  ‚Ä¢ üí° –í—ã—Å–æ–∫–∞—è –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è - —Ä–∏—Å–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç\n"
        
        return text