# report_services/hiring_recommendations_service.py
import pandas as pd
import logging

logger = logging.getLogger(__name__)

class HiringRecommendationsService:
    def __init__(self, data_repository):
        self.repo = data_repository
    
    def generate_report(self):
        """–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –Ω–∞–π–º—É"""
        try:
            data = self.repo.get_hiring_recommendations_data()
            
            # –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö
            logger.info(f"–î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –Ω–∞–π–º—É: {len(data)} —Å—Ç—Ä–æ–∫")
            if len(data) > 0:
                logger.info(f"–ö–æ–ª–æ–Ω–∫–∏: {data.columns.tolist()}")
                logger.info(f"–î–∞–Ω–Ω—ã–µ: {data.to_dict('records')}")
            
            if len(data) == 0 or data.empty:
                return "‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –Ω–∞–π–º—É (–ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞)", None
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–ª–æ–Ω–æ–∫
            required_columns = ['monthly_fires', 'total_employees']
            missing_columns = [col for col in required_columns if col not in data.columns]
            
            if missing_columns:
                return f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–ª–æ–Ω–∫–∏: {missing_columns}. –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏: {data.columns.tolist()}", None
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –æ–± —É–≤–æ–ª—å–Ω–µ–Ω–∏—è—Ö
            total_fires = data['monthly_fires'].sum()
            if total_fires == 0:
                return "üìä –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –º–µ—Å—è—Ü–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏–π –Ω–µ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ. –ü–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å –≤ –Ω–∞–π–º–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.", {}
            
            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å –≤ –Ω–∞–π–º–µ (—Å—Ä–µ–¥–Ω–µ–º–µ—Å—è—á–Ω—ã–µ —É–≤–æ–ª—å–Ω–µ–Ω–∏—è + 10% –Ω–∞ —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç—å)
            data['monthly_fires_avg'] = data['monthly_fires'] / 2  # –°—Ä–µ–¥–Ω–µ–µ –∑–∞ –º–µ—Å—è—Ü
            data['hiring_needed'] = data['monthly_fires_avg'] * 1.1  # +10% –Ω–∞ —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç—å
            
            # –§–∏–ª—å—Ç—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã —Å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å—é
            valid_data = data[data['hiring_needed'] > 0]
            
            if len(valid_data) == 0:
                return "üìä –ù–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å –≤ –Ω–∞–π–º–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ –≤—Å–µ–º —Å–µ—Ä–≤–∏—Å–∞–º", {}
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
            report_text = self._format_report(valid_data)
            hiring_data = valid_data.set_index('service')['hiring_needed'].to_dict()
            
            return report_text, hiring_data
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: {e}", exc_info=True)
            return f"‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: {str(e)}", None
    
    def _format_report(self, data):
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –æ—Ç—á–µ—Ç–∞"""
        total_hiring = data['hiring_needed'].sum()
        
        text = "üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ù–ê–ô–ú–£\n\n"
        text += f"üìà –û–±—â–∞—è –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å –≤ –Ω–∞–π–º–µ: {total_hiring:.1f} —á–µ–ª./–º–µ—Å\n"
        text += f"üìä –û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞ –ò—é–ª—å-–ê–≤–≥—É—Å—Ç 2025\n\n"
        
        text += "üè¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å–µ—Ä–≤–∏—Å–∞–º:\n"
        for _, row in data.iterrows():
            hiring_percentage = (row['hiring_needed'] / row['total_employees']) * 100 if row['total_employees'] > 0 else 0
            text += f"‚Ä¢ {row['service']}: {row['hiring_needed']:.1f} —á–µ–ª./–º–µ—Å ({hiring_percentage:.1f}% –æ—Ç —à—Ç–∞—Ç–∞)\n"
        
        text += f"\nüí° –£—á—Ç–µ–Ω–∞ —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç—å (+10% –∫ —Å—Ä–µ–¥–Ω–∏–º –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º)\n\n"
        
        # –ê–Ω–∞–ª–∏–∑ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤
        text += "üéØ –ü–†–ò–û–†–ò–¢–ï–¢–´ –ù–ê–ô–ú–ê:\n"
        
        high_priority = data[data['hiring_needed'] > 100]
        medium_priority = data[(data['hiring_needed'] > 10) & (data['hiring_needed'] <= 100)]
        low_priority = data[data['hiring_needed'] <= 10]
        
        if len(high_priority) > 0:
            text += "‚Ä¢ üî¥ –í–´–°–û–ö–ò–ô –ü–†–ò–û–†–ò–¢–ï–¢ (>100 —á–µ–ª./–º–µ—Å):\n"
            for _, row in high_priority.iterrows():
                text += f"  - {row['service']}: {row['hiring_needed']:.1f} —á–µ–ª./–º–µ—Å\n"
        
        if len(medium_priority) > 0:
            text += "‚Ä¢ üü° –°–†–ï–î–ù–ò–ô –ü–†–ò–û–†–ò–¢–ï–¢ (10-100 —á–µ–ª./–º–µ—Å):\n"
            for _, row in medium_priority.iterrows():
                text += f"  - {row['service']}: {row['hiring_needed']:.1f} —á–µ–ª./–º–µ—Å\n"
        
        if len(low_priority) > 0:
            text += "‚Ä¢ üü¢ –ù–ò–ó–ö–ò–ô –ü–†–ò–û–†–ò–¢–ï–¢ (‚â§10 —á–µ–ª./–º–µ—Å):\n"
            for _, row in low_priority.iterrows():
                text += f"  - {row['service']}: {row['hiring_needed']:.1f} —á–µ–ª./–º–µ—Å\n"
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —É–≤–æ–ª—å–Ω–µ–Ω–∏—è–º
        total_fires = data['monthly_fires'].sum()
        text += f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –£–í–û–õ–¨–ù–ï–ù–ò–ô:\n"
        text += f"‚Ä¢ –í—Å–µ–≥–æ —É–≤–æ–ª—å–Ω–µ–Ω–∏–π –∑–∞ 2 –º–µ—Å—è—Ü–∞: {total_fires:.0f} —á–µ–ª.\n"
        text += f"‚Ä¢ –°—Ä–µ–¥–Ω–µ–º–µ—Å—è—á–Ω—ã–µ —É–≤–æ–ª—å–Ω–µ–Ω–∏—è: {total_fires/2:.1f} —á–µ–ª./–º–µ—Å\n"
        text += f"‚Ä¢ –°–µ—Ä–≤–∏—Å–æ–≤ —Å –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å—é –≤ –Ω–∞–π–º–µ: {len(data)} –∏–∑ {len(data)}\n"
        
        return text