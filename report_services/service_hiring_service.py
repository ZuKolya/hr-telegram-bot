# report_services/service_hiring_service.py
import pandas as pd
import logging

logger = logging.getLogger(__name__)

class ServiceHiringService:
    def __init__(self, data_repository):
        self.repo = data_repository
    
    def generate_report(self, service_name):
        """–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∞–ª–∏–∑ –Ω–∞–π–º–∞ –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞"""
        try:
            data = self.repo.get_service_hiring_analysis(service_name)
            
            # –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö
            logger.info(f"–ê–Ω–∞–ª–∏–∑ –Ω–∞–π–º–∞ –¥–ª—è {service_name}: basic_stats={len(data['basic_stats'])}, hiring_stats={len(data['hiring_stats'])}")
            
            if len(data['basic_stats']) == 0 or data['basic_stats'].iloc[0]['total_employees'] == 0:
                return f"‚ùå –°–µ—Ä–≤–∏—Å '{service_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö", None
            
            basic_stats = data['basic_stats'].iloc[0]
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º hiring_stats - –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º
            if len(data['hiring_stats']) > 0:
                hiring_stats = data['hiring_stats'].iloc[0]
                monthly_fires = hiring_stats.get('monthly_fires', 0)
            else:
                monthly_fires = 0
                logger.warning(f"–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ —É–≤–æ–ª—å–Ω–µ–Ω–∏—è–º –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞ {service_name}")
            
            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
            hiring_needed = (monthly_fires / 2) * 1.1  # –£—á–µ—Ç —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç–∏ +10%
            
            total_employees = basic_stats['total_employees']
            total_attrition = (basic_stats['total_fires'] / total_employees) * 100 if total_employees > 0 else 0
            hiring_percentage = (hiring_needed / total_employees) * 100 if total_employees > 0 else 0
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ —Ç–µ–∫—É—á–µ—Å—Ç–∏ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–º –¥–ª—è —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
            last_date = self.repo.get_last_report_date()
            age_attrition_data = self.repo.get_detailed_service_analysis(service_name, last_date)
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
            report_text = self._format_report(
                service_name, basic_stats, monthly_fires, 
                hiring_needed, total_attrition, hiring_percentage,
                age_attrition_data
            )
            
            return report_text, None
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –Ω–∞–π–º–∞ –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞ {service_name}: {e}", exc_info=True)
            return f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –Ω–∞–π–º–∞: {str(e)}", None
    
    def _format_report(self, service_name, basic_stats, monthly_fires, 
                      hiring_needed, total_attrition, hiring_percentage,
                      age_attrition_data):
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –ø–æ –Ω–∞–π–º—É"""
        text = f"üîç –ê–ù–ê–õ–ò–ó –ù–ê–ô–ú–ê: {service_name}\n\n"
        
        text += f"üìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:\n"
        text += f"‚Ä¢ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {int(basic_stats['total_employees']):,} —á–µ–ª.\n"
        text += f"‚Ä¢ –¢–µ–∫—É—á–µ—Å—Ç—å: {total_attrition:.1f}%\n"
        text += f"‚Ä¢ –°—Ä–µ–¥–Ω–∏–π –≤–æ–∑—Ä–∞—Å—Ç: {basic_stats['avg_age']:.1f} –ª–µ—Ç\n"
        text += f"‚Ä¢ –°—Ä–µ–¥–Ω–∏–π –æ–ø—ã—Ç: {basic_stats['avg_experience']:.1f} –º–µ—Å.\n\n"
        
        text += f"üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ù–ê–ô–ú–£:\n"
        text += f"‚Ä¢ –£–≤–æ–ª—å–Ω–µ–Ω–∏–π –∑–∞ –ò—é–ª—å-–ê–≤–≥—É—Å—Ç: {int(monthly_fires)} —á–µ–ª.\n"
        text += f"‚Ä¢ –°—Ä–µ–¥–Ω–µ–º–µ—Å—è—á–Ω—ã–µ —É–≤–æ–ª—å–Ω–µ–Ω–∏—è: {monthly_fires/2:.1f} —á–µ–ª./–º–µ—Å\n"
        text += f"‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –Ω–∞–π–º: {hiring_needed:.1f} —á–µ–ª./–º–µ—Å\n"
        text += f"‚Ä¢ –î–æ–ª—è –æ—Ç —à—Ç–∞—Ç–∞: {hiring_percentage:.1f}%\n\n"
        
        if len(age_attrition_data) > 0:
            age_attrition = age_attrition_data.groupby('age_category', as_index=False).agg({
                'employees': 'sum',
                'fires': 'sum'
            })
            age_attrition['attrition_rate'] = (age_attrition['fires'] / age_attrition['employees']) * 100
            age_attrition = age_attrition[age_attrition['employees'] > 0].sort_values('attrition_rate', ascending=False)
            
            if len(age_attrition) > 0:
                text += "üìà –¢–ï–ö–£–ß–ï–°–¢–¨ –ü–û –í–û–ó–†–ê–°–¢–£:\n"
                for _, row in age_attrition.iterrows():
                    text += f"‚Ä¢ {row['age_category']}: {row['attrition_rate']:.1f}% ({int(row['fires'])} —É–≤.)\n"
                text += "\n"
        
        text += "üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:\n"
        
        # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –Ω–∞–π–º–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –æ—Ç —à—Ç–∞—Ç–∞
        if hiring_percentage > 10:
            text += "‚Ä¢ üî¥ –°–†–û–ß–ù–´–ô –ù–ê–ô–ú: –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å (>10% —à—Ç–∞—Ç–∞)\n"
        elif hiring_percentage > 5:
            text += "‚Ä¢ üü† –í–´–°–û–ö–ò–ô –ü–†–ò–û–†–ò–¢–ï–¢: –ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å (5-10% —à—Ç–∞—Ç–∞)\n"
        elif hiring_percentage > 2:
            text += "‚Ä¢ üü° –°–†–ï–î–ù–ò–ô –ü–†–ò–û–†–ò–¢–ï–¢: –£–º–µ—Ä–µ–Ω–Ω–∞—è –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å (2-5% —à—Ç–∞—Ç–∞)\n"
        elif hiring_needed > 0:
            text += "‚Ä¢ üü¢ –ù–ò–ó–ö–ò–ô –ü–†–ò–û–†–ò–¢–ï–¢: –ù–µ–±–æ–ª—å—à–∞—è –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å (<2% —à—Ç–∞—Ç–∞)\n"
        else:
            text += "‚Ä¢ üü¢ –°–¢–ê–ë–ò–õ–¨–ù–ê–Ø –°–ò–¢–£–ê–¶–ò–Ø: –ü–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å –≤ –Ω–∞–π–º–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\n"
        
        # –û—Ü–µ–Ω–∫–∞ —Ç–µ–∫—É—á–µ—Å—Ç–∏
        if total_attrition > 15:
            text += "‚Ä¢ üî¥ –í–´–°–û–ö–ê–Ø –¢–ï–ö–£–ß–ï–°–¢–¨: >15% - —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–Ω–∞–ª–∏–∑ –ø—Ä–∏—á–∏–Ω —É–≤–æ–ª—å–Ω–µ–Ω–∏–π\n"
        elif total_attrition > 10:
            text += "‚Ä¢ üü† –ü–û–í–´–®–ï–ù–ù–ê–Ø –¢–ï–ö–£–ß–ï–°–¢–¨: 10-15% - –≤–Ω–∏–º–∞–Ω–∏–µ –∫ retention\n"
        elif total_attrition > 5:
            text += "‚Ä¢ üü° –£–ú–ï–†–ï–ù–ù–ê–Ø –¢–ï–ö–£–ß–ï–°–¢–¨: 5-10% - –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã\n"
        else:
            text += "‚Ä¢ üü¢ –ù–ò–ó–ö–ê–Ø –¢–ï–ö–£–ß–ï–°–¢–¨: <5% - –æ—Ç–ª–∏—á–Ω—ã–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å\n"
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        if hiring_needed > 20:
            text += "‚Ä¢ üìã –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: –ú–∞—Å—Å–æ–≤—ã–π —Ä–µ–∫—Ä—É—Ç–∏–Ω–≥ + –∞—É—Ç—Å–æ—Ä—Å–∏–Ω–≥\n"
        elif hiring_needed > 10:
            text += "‚Ä¢ üìã –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: –ê–∫—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ + —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞\n"
        elif hiring_needed > 5:
            text += "‚Ä¢ üìã –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–µ–∫—Ä—É—Ç–∏–Ω–≥ + LinkedIn\n"
        elif hiring_needed > 0:
            text += "‚Ä¢ üìã –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: –¢–æ—á–µ—á–Ω—ã–π –ø–æ–∏—Å–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤\n"
        
        text += "\nüìä –û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞ –ò—é–ª—å-–ê–≤–≥—É—Å—Ç 2025\n"
        text += "üí° –£—á—Ç–µ–Ω–∞ —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç—å (+10% –∫ —Å—Ä–µ–¥–Ω–∏–º –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º)\n"
        
        return text
    
    def get_hiring_priority(self, hiring_needed, total_employees):
        """–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –Ω–∞–π–º–∞"""
        if total_employees == 0:
            return "–Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π"
        
        hiring_percentage = (hiring_needed / total_employees) * 100
        
        if hiring_percentage > 10:
            return "–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π"
        elif hiring_percentage > 5:
            return "–≤—ã—Å–æ–∫–∏–π"
        elif hiring_percentage > 2:
            return "—Å—Ä–µ–¥–Ω–∏–π"
        elif hiring_needed > 0:
            return "–Ω–∏–∑–∫–∏–π"
        else:
            return "–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"